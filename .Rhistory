library(data.table)
library(caret)
dd <- fread("/Users/jeffrey/Documents/Boston University/BU-QST-Masters/Spring 2020/BA810/Team Project/Data/creditcard.csv")
# Create train and test dataset
dd[, test:=0]
dd[sample(nrow(dd), 284807*0.2), test:=1]
dd.test <- dd[test==1]
dd.train <- dd[test==0]
dd.train[, "test" := NULL]
dd.test[, "test" := NULL]
# Convert datatables to dataframes
setDF(dd.train)
setDF(dd.test)
# Downsample
set.seed(1)
dd.train$Class <- factor(dd.train$Class)
dd.test$Class <- factor(dd.test$Class)
for.train <- downSample(dd.train[, -ncol(dd.train)],
dd.train$Class)
for.test <- downSample(dd.train[, -ncol(dd.test)],
dd.test$Class)
for.test <- downSample(dd.test[, -ncol(dd.test)],
dd.test$Class)
View(for.test)
ctrl <- trainControl(method = "cv", number = 5)
# Run model
model <- train(Class ~ ., data = for.train, method = "knn", trControl = ctrl)
model
# Predict on downsampled test set
prediction <- predict(model, for.test)
# Confusion matrix
confusionMatrix(prediction, dd.test$Class, positive = "1")
# Confusion matrix
confusionMatrix(prediction, for.test$Class, positive = "1")
# Set cross validation parameters
ctrl <- trainControl(method = "cv", number = 10)
# Run model
model <- train(Class ~ ., data = for.train, method = "knn", trControl = ctrl)
model
# Predict on downsampled test set
prediction <- predict(model, for.test)
# Confusion matrix
confusionMatrix(prediction, for.test$Class, positive = "1")
